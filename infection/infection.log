Escaped mutants:
================

1) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/CategoryDetail.php:51    [M] ArrayItem

--- Original
+++ New
@@ @@
             if ($editCategoryName === '') {
                 $this->viewInterface->addTlpParam('error', ['category' => 'Product Name musst be given']);
             } else {
-                $mappedCategory = $this->categoryMapper->map(['CategoryName' => $editCategoryName, 'CategoryID' => $category->id]);

+                $mappedCategory = $this->categoryMapper->map(['CategoryName' => $editCategoryName, 'CategoryID' > $category->id]);
                 $this->categoryEntityManager->update($mappedCategory);
                 $_POST = [];
                 $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $category->id);


2) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/CategoryDetail.php:51    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             if ($editCategoryName === '') {
                 $this->viewInterface->addTlpParam('error', ['category' => 'Product Name musst be given']);
             } else {
-                $mappedCategory = $this->categoryMapper->map(['CategoryName' => $editCategoryName, 'CategoryID' => $category->id]);
+                $mappedCategory = $this->categoryMapper->map(['CategoryID' => $category->id]);
                 $this->categoryEntityManager->update($mappedCategory);
                 $_POST = [];
                 $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $category->id);


3) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/CategoryDetail.php:52    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTlpParam('error', ['category' => 'Product Name musst be given']);
             } else {
                 $mappedCategory = $this->categoryMapper->map(['CategoryName' => $editCategoryName, 'CategoryID' => $category->id]);
-                $this->categoryEntityManager->update($mappedCategory);
+                
                 $_POST = [];
                 $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $category->id);
             }


4) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/CategoryDetail.php:57    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $category->id);
             }
         } elseif (isset($_POST['deleteCategory'])) {
-            $this->categoryEntityManager->delete($category->id);
+            
             $_POST = [];
             $this->redirect->redirect('index.php?area=Admin&page=Category');
         } elseif (isset($_POST['createProduct'])) {


5) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/CategoryDetail.php:76    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $_POST = [];
         $this->viewInterface->addTlpParam('category', $category);
         $this->viewInterface->addTlpParam('productList', $this->productRepository->getList());
-        $this->viewInterface->addTlpParam('productListExcludeCategory', $this->productRepository->getListExcludeCategory());
+        
         $this->viewInterface->addTlpParam('editCategoryName', $editCategoryName);
         $this->viewInterface->addTemplate('backend/categoryDetail.tpl');
     }
 }


6) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/ProductDetail.php:53    [M] ArrayItem

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTlpParam('error', 'Product name musst be given');
             } else {
                 $productDescription = $_POST["editProductDescription"] ?? null;
-                $mappedProduct = $this->productMapper->map(['ProductID' => $product->id, 'ProductName' => $_POST["editProductName"], 'ProductDescription' => $productDescription]);
+                $mappedProduct = $this->productMapper->map(['ProductID' > $product->id, 'ProductName' => $_POST["editProductName"], 'ProductDescription' => $productDescription]);
                 $this->productEntityManager->update($mappedProduct);
                 $_POST = [];
                 $this->redirect->redirect('index.php?area=Admin&page=ProductDetail&categoryID=' . $categoryID . '&productID=' . $product->id);


7) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/ProductDetail.php:53    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTlpParam('error', 'Product name musst be given');
             } else {
                 $productDescription = $_POST["editProductDescription"] ?? null;
-                $mappedProduct = $this->productMapper->map(['ProductID' => $product->id, 'ProductName' => $_POST["editProductName"], 'ProductDescription' => $productDescription]);
+                $mappedProduct = $this->productMapper->map(['ProductName' => $_POST["editProductName"], 'ProductDescription' => $productDescription]);
                 $this->productEntityManager->update($mappedProduct);
                 $_POST = [];
                 $this->redirect->redirect('index.php?area=Admin&page=ProductDetail&categoryID=' . $categoryID . '&productID=' . $product->id);


8) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/ProductDetail.php:54    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } else {
                 $productDescription = $_POST["editProductDescription"] ?? null;
                 $mappedProduct = $this->productMapper->map(['ProductID' => $product->id, 'ProductName' => $_POST["editProductName"], 'ProductDescription' => $productDescription]);
-                $this->productEntityManager->update($mappedProduct);
+                
                 $_POST = [];
                 $this->redirect->redirect('index.php?area=Admin&page=ProductDetail&categoryID=' . $categoryID . '&productID=' . $product->id);
             }


9) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/ProductDetail.php:59    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $this->redirect->redirect('index.php?area=Admin&page=ProductDetail&categoryID=' . $categoryID . '&productID=' . $product->id);
             }
         } elseif (isset($_POST['deleteProduct'])) {
-            $this->productEntityManager->delete($product->id);
+            
             $_POST = [];
             $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $categoryID);
         } elseif (isset($_POST['removeProductFromCategory'])) {


10) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/ProductDetail.php:63    [M] CastInt

--- Original
+++ New
@@ @@
             $_POST = [];
             $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $categoryID);
         } elseif (isset($_POST['removeProductFromCategory'])) {
-            $this->categoryProductEntityManager->delete((int) $categoryID, $product->id);
+            $this->categoryProductEntityManager->delete($categoryID, $product->id);
             $_POST = [];
             $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $categoryID);
         } else {


11) /home/philipphermes/phpProjects/MVC/src/Controller/Backend/ProductDetail.php:63    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $_POST = [];
             $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $categoryID);
         } elseif (isset($_POST['removeProductFromCategory'])) {
-            $this->categoryProductEntityManager->delete((int) $categoryID, $product->id);
+            
             $_POST = [];
             $this->redirect->redirect('index.php?area=Admin&page=CategoryDetail&categoryID=' . $categoryID);
         } else {


12) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/Product.php:31    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function action() : void
     {
-        $categoryID = 0;
+        $categoryID = -1;
         $category = null;
         if (isset($_GET['categoryID'])) {
             $categoryID = (int) $_GET['categoryID'];


13) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/Product.php:34    [M] CastInt

--- Original
+++ New
@@ @@
         $categoryID = 0;
         $category = null;
         if (isset($_GET['categoryID'])) {
-            $categoryID = (int) $_GET['categoryID'];
+            $categoryID = $_GET['categoryID'];
             $category = $this->categoryRepository->getByID($categoryID);
             if ($category !== null) {
                 $productList = $this->productRepository->getList();


14) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/Product.php:45    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTemplate('product.tpl');
             }
         }
-        if ($categoryID === 0 || $category === null) {
+        if ($categoryID === -1 || $category === null) {
             $this->redirect->redirect('index.php');
         }
     }
 }


15) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/Product.php:45    [M] Identical

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTemplate('product.tpl');
             }
         }
-        if ($categoryID === 0 || $category === null) {
+        if ($categoryID !== 0 || $category === null) {
             $this->redirect->redirect('index.php');
         }
     }
 }


16) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/Product.php:45    [M] Identical

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTemplate('product.tpl');
             }
         }
-        if ($categoryID === 0 || $category === null) {
+        if ($categoryID === 0 || $category !== null) {
             $this->redirect->redirect('index.php');
         }
     }
 }


17) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/Product.php:45    [M] LogicalOr

--- Original
+++ New
@@ @@
                 $this->viewInterface->addTemplate('product.tpl');
             }
         }
-        if ($categoryID === 0 || $category === null) {
+        if ($categoryID === 0 && $category === null) {
             $this->redirect->redirect('index.php');
         }
     }
 }


18) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:31    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     public function action() : void
     {
-        $categoryID = 0;
+        $categoryID = -1;
         $productID = 0;
         $category = null;
         $product = null;


19) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:32    [M] DecrementInteger

--- Original
+++ New
@@ @@
     public function action() : void
     {
         $categoryID = 0;
-        $productID = 0;
+        $productID = -1;
         $category = null;
         $product = null;
         if (isset($_GET['categoryID'])) {


20) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:36    [M] CastInt

--- Original
+++ New
@@ @@
         $category = null;
         $product = null;
         if (isset($_GET['categoryID'])) {
-            $categoryID = (int) $_GET['categoryID'];
+            $categoryID = $_GET['categoryID'];
             $category = $this->categoryRepository->getById($categoryID);
             if ($category !== null) {
                 if (isset($_GET['productID'])) {


21) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:40    [M] CastInt

--- Original
+++ New
@@ @@
             $category = $this->categoryRepository->getById($categoryID);
             if ($category !== null) {
                 if (isset($_GET['productID'])) {
-                    $productID = (int) $_GET['productID'];
+                    $productID = $_GET['productID'];
                     $product = $this->productRepository->getByID($productID);
                     if ($product !== null) {
                         $this->viewInterface->addTlpParam('category', $category);


22) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:50    [M] DecrementInteger

--- Original
+++ New
@@ @@
                 }
             }
         }
-        if ($categoryID === 0 || $category === null) {
+        if ($categoryID === -1 || $category === null) {
             $this->redirect->redirect('index.php');
         } elseif ($productID === 0 || $product === null) {
             $this->redirect->redirect('index.php?area=Consumer&page=Product&categoryID=' . $categoryID);


23) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:50    [M] LogicalOr

--- Original
+++ New
@@ @@
                 }
             }
         }
-        if ($categoryID === 0 || $category === null) {
+        if ($categoryID === 0 && $category === null) {
             $this->redirect->redirect('index.php');
         } elseif ($productID === 0 || $product === null) {
             $this->redirect->redirect('index.php?area=Consumer&page=Product&categoryID=' . $categoryID);


24) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:52    [M] DecrementInteger

--- Original
+++ New
@@ @@
         }
         if ($categoryID === 0 || $category === null) {
             $this->redirect->redirect('index.php');
-        } elseif ($productID === 0 || $product === null) {
+        } elseif ($productID === -1 || $product === null) {
             $this->redirect->redirect('index.php?area=Consumer&page=Product&categoryID=' . $categoryID);
         }
     }
 }


25) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:52    [M] Identical

--- Original
+++ New
@@ @@
         }
         if ($categoryID === 0 || $category === null) {
             $this->redirect->redirect('index.php');
-        } elseif ($productID === 0 || $product === null) {
+        } elseif ($productID !== 0 || $product === null) {
             $this->redirect->redirect('index.php?area=Consumer&page=Product&categoryID=' . $categoryID);
         }
     }
 }


26) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:52    [M] Identical

--- Original
+++ New
@@ @@
         }
         if ($categoryID === 0 || $category === null) {
             $this->redirect->redirect('index.php');
-        } elseif ($productID === 0 || $product === null) {
+        } elseif ($productID === 0 || $product !== null) {
             $this->redirect->redirect('index.php?area=Consumer&page=Product&categoryID=' . $categoryID);
         }
     }
 }


27) /home/philipphermes/phpProjects/MVC/src/Controller/Frontend/ProductDetail.php:52    [M] LogicalOr

--- Original
+++ New
@@ @@
         }
         if ($categoryID === 0 || $category === null) {
             $this->redirect->redirect('index.php');
-        } elseif ($productID === 0 || $product === null) {
+        } elseif ($productID === 0 && $product === null) {
             $this->redirect->redirect('index.php?area=Consumer&page=Product&categoryID=' . $categoryID);
         }
     }
 }


28) /home/philipphermes/phpProjects/MVC/src/Core/UserValidation.php:31    [M] LogicalAnd

--- Original
+++ New
@@ @@
         }
         if (empty($errors)) {
             $getByUsername = $this->userRepository->getByUsername($username);
-            if ($getByUsername !== null && $username === $getByUsername->username && $password === $getByUsername->password) {
+            if (($getByUsername !== null || $username === $getByUsername->username) && $password === $getByUsername->password) {
                 return $errors;
             } else {
                 $errors[] = "Password and User don't match";


29) /home/philipphermes/phpProjects/MVC/src/Core/UserValidation.php:32    [M] ArrayOneItem

--- Original
+++ New
@@ @@
         if (empty($errors)) {
             $getByUsername = $this->userRepository->getByUsername($username);
             if ($getByUsername !== null && $username === $getByUsername->username && $password === $getByUsername->password) {
-                return $errors;
+                return count($errors) > 1 ? array_slice($errors, 0, 1, true) : $errors;
             } else {
                 $errors[] = "Password and User don't match";
             }


30) /home/philipphermes/phpProjects/MVC/src/Model/Database.php:34    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         try {
             $dsn = "mysql:host=" . $this->dbSettings['server'] . ";dbname=" . $this->dbSettings['database'] . ";charset=" . $this->dbSettings['charset'];
             $this->connection = new \PDO($dsn, $this->dbSettings['user'], $this->dbSettings['password']);
-            $this->connection->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
+            
         } catch (\PDOException $error) {
             throw new \PDOException("Connection failed: " . $error->getMessage());
         }


31) /home/philipphermes/phpProjects/MVC/src/Model/EntityManager/CategoryProductEntityManager.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function delete(int $categoryID, int $productID) : void
     {
         $query = $this->connection->prepare('DELETE FROM CategoryProduct WHERE CategoryID = ? AND ProductID = ?');
-        $query->execute([$categoryID, $productID]);
+        
     }
 }


32) /home/philipphermes/phpProjects/MVC/src/Model/Mapper/ProductMapper.php:24    [M] DecrementInteger

--- Original
+++ New
@@ @@
         if (isset($product['CategoryID'])) {
             $productDTO->categoryID = (int) $product['CategoryID'];
         } else {
-            $productDTO->categoryID = 0;
+            $productDTO->categoryID = -1;
         }
         return $productDTO;
     }
 }


33) /home/philipphermes/phpProjects/MVC/src/Model/Mapper/UserMapper.php:17    [M] DecrementInteger

--- Original
+++ New
@@ @@
         if (isset($user['UserID'])) {
             $userDTO->id = (int) $user['UserID'];
         } else {
-            $userDTO->id = 0;
+            $userDTO->id = -1;
         }
         $userDTO->username = $user['Username'] ?? '';
         $userDTO->password = $user['Password'] ?? '';


34) /home/philipphermes/phpProjects/MVC/src/Model/Repository/ProductRepository.php:26    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     private function getCategoryID() : void
     {
-        $this->categoryID = 0;
+        $this->categoryID = -1;
         if (isset($_GET['categoryID'])) {
             $this->categoryID = (int) $_GET['categoryID'];
         }


Timed Out mutants:
==================

Skipped mutants:
================
